definitions:
  dto.LoginRequestDto:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.ProductCreateRequestBody:
    properties:
      name:
        type: string
      price:
        type: number
    type: object
  dto.UserCreateRequestBody:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  dto.UserUpdateRequestBody:
    properties:
      email:
        type: string
      username:
        type: string
    type: object
  go-api_internal_core_domain.Auth:
    properties:
      id:
        type: string
      token:
        type: string
    type: object
  go-api_internal_core_domain.Product:
    properties:
      id_product:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
  go-api_internal_core_domain.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
  response.JSONBadRequestResult:
    properties:
      code:
        example: 400
        type: integer
      data: {}
      message:
        example: Wrong Parameter
        type: string
    type: object
  response.JSONIntServerErrReqResult:
    properties:
      code:
        example: 500
        type: integer
      data: {}
      message:
        example: Error Database
        type: string
    type: object
  response.JSONSuccessResult:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: Success
        type: string
    type: object
info:
  contact: {}
paths:
  /api/login:
    post:
      consumes:
      - application/json
      description: Login user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/go-api_internal_core_domain.Auth'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadRequestResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: Login User
      tags:
      - Login
  /api/product:
    post:
      consumes:
      - application/json
      description: CreateProduct
      parameters:
      - description: Product Data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.ProductCreateRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/go-api_internal_core_domain.Product'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadRequestResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: CreateProduct
      tags:
      - Products
  /api/product/{productId}:
    delete:
      consumes:
      - application/json
      description: DeleteProduct
      operationId: productId
      parameters:
      - description: ProductRequestParam
        in: path
        name: productId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadRequestResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: DeleteProduct
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: GetProductById
      parameters:
      - description: ProductRequestParam
        in: path
        name: productId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/go-api_internal_core_domain.Product'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadRequestResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: GetProductById
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: UpdateProduct
      operationId: productId
      parameters:
      - description: ProductRequestParam
        in: path
        name: productId
        required: true
        type: integer
      - description: Product Data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.ProductCreateRequestBody'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadRequestResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: UpdateProduct
      tags:
      - Products
  /api/products:
    get:
      consumes:
      - application/json
      description: GetProdutcts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  items:
                    $ref: '#/definitions/go-api_internal_core_domain.Product'
                  type: array
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadRequestResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: GetProdutcts
      tags:
      - Products
  /api/user:
    post:
      consumes:
      - application/json
      description: CreateUser
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserCreateRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/go-api_internal_core_domain.User'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadRequestResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: CreateUser
      tags:
      - Users
  /api/user/{userId}:
    delete:
      consumes:
      - application/json
      description: DeleteUser
      operationId: userId
      parameters:
      - description: UserRequestParam
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadRequestResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: DeleteUser
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: GetUserById
      operationId: userId
      parameters:
      - description: UserRequestParam
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/go-api_internal_core_domain.User'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadRequestResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: GetUserById
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: UpdateUser
      operationId: userId
      parameters:
      - description: UserRequestParam
        in: path
        name: userId
        required: true
        type: integer
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserUpdateRequestBody'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadRequestResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: UpdateUser
      tags:
      - Users
  /api/user/{userId}/update-password:
    post:
      consumes:
      - application/json
      description: UpdatePassword
      parameters:
      - description: UserRequestParam
        in: path
        name: userId
        required: true
        type: integer
      - description: login Data
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequestDto'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadRequestResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: UpdatePassword
      tags:
      - Users
  /api/users:
    get:
      consumes:
      - application/json
      description: GetUsers list all users from database
      operationId: username
      parameters:
      - description: UserRequestParam
        in: path
        name: username
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  items:
                    $ref: '#/definitions/go-api_internal_core_domain.User'
                  type: array
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONBadRequestResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONIntServerErrReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: GetUsers User
      tags:
      - Users
swagger: "2.0"
